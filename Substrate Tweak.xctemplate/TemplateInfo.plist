<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Kind</key>
	<string>Xcode.Xcode3.ProjectTemplateUnitKind</string>
	<key>Identifier</key>
	<string>com.kokoabim.iosopendev.tweak</string>
	<key>Concrete</key>
	<true/>
	<key>Description</key>
	<string>This template builds a Tweak.</string>
	<key>Ancestors</key>
	<array>
		<string>com.kokoabim.iosopendev.base</string>
		<string>com.kokoabim.iosopendev.unitTests</string>
	</array>
	<key>Targets</key>
	<array>
		<dict>
			<key>ProductType</key>
			<string>com.apple.product-type.library.dynamic</string>
			<key>SharedSettings</key>
			<dict>
				<key>INSTALL_PATH</key>
				<string>/Library/MobileSubstrate/DynamicLibraries</string>
				<key>DYLIB_CURRENT_VERSION</key>
				<string>1</string>
				<key>DYLIB_COMPATIBILITY_VERSION</key>
				<string>1</string>
			</dict>
			<key>BuildPhases</key>
			<array>
				<dict>
					<key>Class</key>
					<string>Sources</string>
				</dict>
				<dict>
					<key>Class</key>
					<string>Frameworks</string>
				</dict>
				<dict>
					<key>Class</key>
					<string>Headers</string>
				</dict>
				<dict>
					<key>ShellScript</key>
					<string>/opt/iOSOpenDev/bin/iosod --xcbp</string>
					<key>ShellPath</key>
					<string>/bin/sh</string>
					<key>RunOnlyForDeploymentPostprocessing</key>
					<false/>
					<key>Class</key>
					<string>ShellScript</string>
				</dict>
			</array>
			<key>Frameworks</key>
			<array>
				<string>Foundation</string>
			</array>
		</dict>
	</array>
	<key>Nodes</key>
	<array>
		<string>___PACKAGENAMEASIDENTIFIER___.mm</string>
		<string>Package/DEBIAN/control:debianControl:section</string>
		<string>Package/DEBIAN/control:debianControl:depends</string>
		<string>Package/Library/MobileSubstrate/DynamicLibraries/___PACKAGENAMEASIDENTIFIER___.plist</string>
	</array>
	<key>Definitions</key>
	<dict>
		<key>___PACKAGENAMEASIDENTIFIER___.mm</key>
		<dict>
			<key>Beginning</key>
			<string>//
//  ___FILENAME___
//  ___PACKAGENAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright (c) ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//

// CaptainHook by Ryan Petrich
// see https://github.com/rpetrich/CaptainHook/

#import &lt;Foundation/Foundation.h&gt;
#import &lt;CaptainHook/CaptainHook.h&gt;
#include &lt;notify.h&gt; // not required; for examples only

// Objective-C runtime hooking using CaptainHook:
//   1. declare class using CHDeclareClass()
//   2. load class using CHLoadClass() or CHLoadLateClass() in CHConstructor
//   3. hook method using CHOptimizedMethod()
//   4. register hook using CHHook() in CHConstructor
//   5. (optionally) call old method using CHSuper()


@interface ___FILEBASENAMEASIDENTIFIER___ : NSObject

@end

@implementation ___FILEBASENAMEASIDENTIFIER___

-(id)init
{
	if ((self = [super init]))
	{
	}

    return self;
}

@end


@class ClassToHook;

CHDeclareClass(ClassToHook); // declare class

CHOptimizedMethod(0, self, void, ClassToHook, messageName) // hook method (with no arguments and no return value)
{
	// write code here ...
	
	CHSuper(0, ClassToHook, messageName); // call old (original) method
}

CHOptimizedMethod(2, self, BOOL, ClassToHook, arg1, NSString*, value1, arg2, BOOL, value2) // hook method (with 2 arguments and a return value)
{
	// write code here ...

	return CHSuper(2, ClassToHook, arg1, value1, arg2, value2); // call old (original) method and return its return value
}

static void WillEnterForeground(CFNotificationCenterRef center, void *observer, CFStringRef name, const void *object, CFDictionaryRef userInfo)
{
	// not required; for example only
}

static void ExternallyPostedNotification(CFNotificationCenterRef center, void *observer, CFStringRef name, const void *object, CFDictionaryRef userInfo)
{
	// not required; for example only
}

CHConstructor // code block that runs immediately upon load
{
	NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];
	
	// listen for local notification (not required; for example only)
	CFNotificationCenterRef center = CFNotificationCenterGetLocalCenter();
	CFNotificationCenterAddObserver(center, NULL, WillEnterForeground, CFSTR(&quot;UIApplicationWillEnterForegroundNotification&quot;), NULL, CFNotificationSuspensionBehaviorCoalesce);
	
	// listen for system-side notification (not required; for example only)
	// this would be posted using: notify_post(&quot;___VARIABLE_bundleIdentifierPrefix:bundleIdentifier___.___VARIABLE_productName:RFC1034Identifier___.eventname&quot;);
	CFNotificationCenterRef darwin = CFNotificationCenterGetDarwinNotifyCenter();
	CFNotificationCenterAddObserver(darwin, NULL, ExternallyPostedNotification, CFSTR(&quot;___VARIABLE_bundleIdentifierPrefix:bundleIdentifier___.___VARIABLE_productName:RFC1034Identifier___.eventname&quot;), NULL, CFNotificationSuspensionBehaviorCoalesce);
	
	// CHLoadClass(ClassToHook); // load class (that is &quot;available now&quot;)
	// CHLoadLateClass(ClassToHook);  // load class (that will be &quot;available later&quot;)
	
	CHHook(0, ClassToHook, messageName); // register hook
	CHHook(2, ClassToHook, arg1, arg2); // register hook
	
	[pool drain];
}</string>
		</dict>
		<key>Package/Library/MobileSubstrate/DynamicLibraries/___PACKAGENAMEASIDENTIFIER___.plist</key>
		<dict>
			<key>Group</key>
			<array>
				<string>Package</string>
				<string>Library</string>
				<string>MobileSubstrate</string>
				<string>DynamicLibraries</string>
			</array>
			<key>Beginning</key>
			<string>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;
&lt;plist version=&quot;1.0&quot;&gt;
&lt;dict&gt;
	&lt;key&gt;Filter&lt;/key&gt;
	&lt;dict&gt;
		&lt;key&gt;Classes&lt;/key&gt;
		&lt;array/&gt;
		&lt;key&gt;CoreFoundationVersion&lt;/key&gt;
		&lt;array/&gt;
		&lt;key&gt;Executables&lt;/key&gt;
		&lt;array/&gt;
		&lt;key&gt;Bundles&lt;/key&gt;
		&lt;array/&gt;
	&lt;/dict&gt;
&lt;/dict&gt;
&lt;/plist&gt;</string>
		</dict>
		<key>*:debianControl:section</key>
		<string>Section: Tweaks</string>
		<key>*:debianControl:depends</key>
		<string>Depends: firmware (&gt;= 5.0), mobilesubstrate</string>
	</dict>
</dict>
</plist>
